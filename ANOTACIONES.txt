// VISUALIZAR TODOS LOS CONTENEDORES 
docker ps 
//detener contenedor espera a terminar el proceso y detiene, si pasan mas de 10 segundos manda a llamar KILL 
docker stop [container_id ó container_name]
//mata el contendor aun sin esta corriendo o no un proceso, no espera
docker kill [container_id ó container_name]

//ejecutar un comando en el contenedor
docker exec -it [container_id] [command]

//salir del bash
exit

//run docker
docker run 


docker run -it [container id] -- puedes interrumpir la tarea primaria como en redis

//


acoplamiento grado de depencencia 


QUERY--REGRESA DATO
COMMAND-- MODIFICAN DATOS pero no regresan nada, a veces una pequeña parte


//CREAR DOCKER NETWORK
docker network create --attachable -d [compponente]  [name]
//version de docker compose
docker-compose --version
//ejecutar yaml docker compose
docker-compose up -d [yaml name]


COMMAND
Descrpcion de una actividad a realizar--nombres imperativos  --> abrirCuentaCommand

EVENTS
ES UNA ACTIVIDAD QUE SUCEDIO EN UNA APLICACION -- ES UN AGGREGATE -- UN GRUPO DE ENTIDADESS QUE MANTIENEN EL ESTADO DE LA APLICACION
EVENTOS NOMBRAS EN PASADO -- cuentaCorrienteCreadaEvent
//AGGREGATE
Entidades que tienen la mision de mantener la consistencia del estado


//EVENT STORE 
ALMACENA EVENTOS DE MANERA SECUENCIAL IMPORTANTE PARA EVENT SOURCING
SOLO DEBE SER CAPAZ DE AGREGAR NUEVOS EVENTOS, EDICION O ELIMINADO NO ES PERMITIDO
TODOS DEBEN SER DE MANERA CRONOLOGICA


//KAFKA BROKER
SERVIDOR EJECUTANDO UN KAFKA CLUSTER(UNO O MAS BROKERS)
minimo de 3 BROKERS

//TOPICS
CANAL DE COMUNICACION (LOS CONSUMERS ESTAN SUSCRITOS A UN TOPIC)
PARTICIONES EN BROKERS


//QUE ES DDD (Domain Drive Design)
ESTRUCTURAR Y MODELAR
TRABAJA CON EL CORE DE BUSINESS LOGIC
PROBLEMAS = DOMINIO

BOUNDED CONTEXT --
ES UNA AREA DE PROBLEMA INDEPENDIENTE
TRAZA LIMITES ENTRE PROBLEMAS
CADA BOUNDEND CONTEXT TENDRA UNA SOLUCION  -> Microservice


